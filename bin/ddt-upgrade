#!/usr/bin/env php
<?php declare(strict_types=1);
$cli = require_once(__DIR__.'/../src/init.php');

###################################################################
## Upgrade the tools
###################################################################
try{
    if($cli->hasArg("skip-tool-upgrade") === false){
		$output = Shell::passthru('ddt-project --pull=/tool');
    }
}catch(Exception $e){
    // Couldn't sync, we should fail here
	$output = $e->getMessage();
	if(strpos($output, "Skipping") !== false){
		print(Text::box('Cannot perform update because cannot upgrade tools, on the tools project you must perform one of the following commands:', 'white', 'red'));
	    print(<<<EOF
            1: git --reset hard
            2: git stash
            3: delete tools and clone them fresh if you can't fix it yourself

            Then re-run this command. Exiting...\n\n
EOF
        );
		exit(1);
    }
}

###################################################################
## Version 0.9 -> 1.0
## This always runs, it should always result in the same result
###################################################################
try{
    $newVersion = '1.0';
	Shell::exec(__DIR__ . "/ddt-config");
    Shell::exec(__DIR__ . "/ddt-setup --install");
    $config = \DDT\Config\SystemConfig::instance();
    $config->setVersion($newVersion);
}catch(Exception $e){
    print(Text::red("The upgrade to $newVersion has failed, please report this error\n"));

	$message = trim(Text::stripColours($e->getMessage()));
    print(Text::box("Error: $message", "white", "red"));
    exit(1);
}

$version = $config->getVersion();
print(Text::yellow("You are running version '$version' of the tools\n"));

exit(0);

###################################################################
## Version 1.0 -> x.x
## This is a template of how to make a new upgrade
## Make a copy of this template, put it above, edit appropriately
## Don't edit this template, keep it around for the future
###################################################################
//if($version < $newVersion=1.1){
//    try{
//        /** do something here */
//        print("");
//    }catch(Exception $e){
//		print(Text::red("The upgrade to $newVersion has failed, please report this error\n"));
//
//		$message = trim(Text::stripColours($e->getMessage()));
//		print(Text::box("Error: $message", "white", "red"));
//		exit(1);
//    }
//}
