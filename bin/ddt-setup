#!/usr/bin/env php
<?php declare(strict_types=1);
$showErrors = true;
$cli = require_once(__DIR__.'/../src/init.php');

$config     = new SystemConfig();
$pathConfig = new PathConfig($config);

function help(CLI $cli)
{
	$script = $cli->getScript(false);

	Text::print(<<<EOF
    {yel}Usage Example:{end} 
        $script --install
        $script --projects=\$HOME/projects

    {blu}Description:{end}
        Install or Uninstall the ddt tools into the system path and setup the projects directory

    {blu}Options:{end}
        --get: Output the path the tools are installed to
        --install[=XXX]: Install the tools into the path using the either the optional path given with the parameter or defaults to the current directory
        --uninstall: Uninstall the tools, given the path from the configuration
        --projects=XXX: Setup the projects directory where ddt-tools will 
        --test: Tests whether the tools are installed and can be executed as expected.


EOF
    );

	exit(0);
}

if($cli->hasArg('help') || $cli->countArgs() === 0){
    help($cli);
}

if($cli->getArg('get')){
	Text::print("{quiet}Installed Tools: {/quiet}".$config->getToolsPath()."{quiet}\n{/quiet}");
}

if($newPath = $cli->getArg('install')){
    // Detect bad paths and ignore them
    $newPath = is_dir($newPath) ? realpath($newPath) : dirname(__DIR__);

    $script = $cli->getScript(false);

    if(!is_dir("$newPath/bin") || !file_exists("$newPath/bin/$script")){
        Script::failure(Text::write(<<<EOF
        {red}Sanity checks for this path failed. The following items are required to be valid:
        Folder: $newPath/bin
        File: $newPath/bin/$script{end}
EOF
        ));
    }

    $pathConfig->install($newPath);

    // We override this value because now we've updated the path, we should test
    $cli->setArg('test', true);
}

if($cli->hasArg('uninstall')){
	$toolPath = $config->getToolsPath();
	$pathConfig->uninstall($toolPath);
}

if($cli->hasArg('test')){
    $toolPath = $config->getToolsPath();

    if($pathConfig->test($toolPath, $cli->getScript(false))){
        print(Text::box("The path was successfully installed, you might need to open a new terminal to see the effects", "black", "green"));
    }else{
        print(Text::box("The tool '" . basename($cli->getScript()) . "' could not set the shell path successfully installed. Please report this error", "white", "red"));
        exit(1);
    }
}

exit(0);
