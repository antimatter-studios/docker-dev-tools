#!/usr/bin/env bash

function docker_running_id ()
{
    if [ -z "$1" ]; then ddt_app_error "Must pass the name of the container as the first parameter"; fi

    docker ps | grep "$1" | awk '{ print $1 }'
}

function docker_container_id ()
{
    if [ -z "$1" ]; then ddt_app_error "Must pass the name of the container as the first parameter"; fi

    docker container ls --all | grep "$1" | awk '{ print $1 }'
}

function docker_container_networks ()
{
    if [ -z "$1" ]; then ddt_app_error "Must pass the name of the container as the first parameter"; fi

    container_id=$(docker_running_id $1)

    docker inspect --format '{{ range $p, $conf := .NetworkSettings.Networks }} {{$p}} {{end}}' ${container_id}
}

function docker_get_network_id ()
{
    if [ -z "$1" ]; then ddt_app_error "You must pass the name of the network as the first parameter"; fi

    docker network ls | grep $1 | awk '{ print $1 }'
}

function docker_create_network ()
{
    if [ -z "$1" ]; then ddt_app_error "You must pass the name of the network as the first parameter"; fi

    network_id=$(docker_get_network_id $1)

    # Create the ddt network if it isn't already created
    if [ -z "${network_id}" ]; then
        network_id=$(docker network create $1)
        text "${blu}Create ddt network:${end} $1 (id: ${network_id})"
    else
        text "${yel}Network '$1' already exists${end}"
    fi
}

export -f docker_running_id
export -f docker_container_id
export -f docker_container_networks
export -f docker_get_network_id
export -f docker_create_network