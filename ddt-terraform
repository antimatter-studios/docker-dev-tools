#!/usr/bin/env bash

image=terraform:ddt
search=$(docker images ${image} | awk '{if(NR>1)print}')
if [ -z "${search}" ]; then
    echo -e "FROM alpine:edge\nRUN apk add --no-cache git openssh-client ca-certificates terraform\nENTRYPOINT [\"terraform\"]" | docker build -t ${image} -
fi

env_file=${PWD}/.terraform/environment
[ -f "${env_file}" ] && workspace=$(cat ${env_file}) || workspace=default
echo "Using workspace configuration: ${workspace}"

role=$(ddt-awscli configure get role_arn --profile ${workspace} 2>/dev/null | tr -dc '[[:print:]]' || echo "")
keys=$(ddt-awscli configure get source_profile --profile ${workspace} 2>/dev/null | tr -dc '[[:print:]]' || echo "")

if [ ! -z "${role}" ] && [ ! -z "${keys}" ]; then
    echo "Using AWS Role: '$role' with keys '$keys'"

    credentials=(`ddt-awscli sts assume-role --role-arn "${role}" --profile ${keys} --role-session-name terraform --query '[Credentials.AccessKeyId,Credentials.SecretAccessKey,Credentials.SessionToken]' --output text`)

    AWS_ACCESS_KEY_ID=$(echo ${credentials[0]} | tr -d '[:space:]')
    AWS_SECRET_ACCESS_KEY=$(echo ${credentials[1]} | tr -d '[:space:]')
    AWS_SESSION_TOKEN=$(echo ${credentials[2]} | tr -d '[:space:]')
    AWS_SECURITY_TOKEN=$(echo ${credentials[2]} | tr -d '[:space:]')
else
    echo -e "No AWS Role Found, attempting to acquire static credentials instead: \c"

    AWS_ACCESS_KEY_ID=$(ddt-awscli configure get aws_access_key_id --profile ${workspace} 2>/dev/null | tr -dc '[[:print:]]' || echo "")
    AWS_SECRET_ACCESS_KEY=$(ddt-awscli configure get aws_secret_access_key --profile ${workspace} 2>/dev/null | tr -dc '[[:print:]]' || echo "")

    [ -z "${AWS_ACCESS_KEY_ID}" ] && [ -z "${AWS_SECRET_ACCESS_KEY}" ] && echo "Found" || echo "Couldn't find them, lets continue anyway"
fi

TF_ENV=()
[ ! -z "${TF_LOG}" ] && TF_ENV[0]="--env TF_LOG=${TF_LOG}"
[ -f "${env_file}" ] && TF_ENV[1]="--env TF_DATA_DIR=terraform.tfstate.d/${workspace}"

# if using workspace command, then remove the TF_DATA_DIR env var
[ "$1" == "workspace" ] && TF_ENV[1]=

echo "Running Terraform:"
docker run -it --rm ${TF_ENV[@]} \
    --env AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
    --env AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
    --env AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN} \
    --env AWS_SECURITY_TOKEN=${AWS_SECURITY_TOKEN} \
    --network backbone \
    -v $PWD:/app \
    -v $HOME/.ssh/id_rsa:/root/.ssh/id_rsa:ro \
    -w /app \
    ${image} $@

echo "Done!"

